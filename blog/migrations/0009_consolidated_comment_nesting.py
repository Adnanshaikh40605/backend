# Generated by Django 4.2.13 on 2025-01-10 12:00

from django.db import migrations, models
import django.db.models.deletion


def consolidate_comment_nesting(apps, schema_editor):
    """
    Consolidate comment nesting functionality.
    This migration ensures all comment nesting fields are properly set up.
    """
    Comment = apps.get_model('blog', 'Comment')
    
    # Update existing comments to have proper nesting structure
    for comment in Comment.objects.all():
        if not comment.path:
            comment.path = str(comment.id)
        if comment.level is None:
            comment.level = 0
        comment.save()


def reverse_consolidate(apps, schema_editor):
    """
    Reverse operation - this is handled by the field removals in the migration
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("blog", "0008_commentlike"),
    ]

    operations = [
        # Ensure all comment nesting fields exist and are properly configured
        migrations.RunPython(consolidate_comment_nesting, reverse_consolidate),
        
        # Add any missing indexes
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS blog_comment_nesting_idx ON blog_comment (parent_id, level, path);",
            reverse_sql="DROP INDEX IF EXISTS blog_comment_nesting_idx;"
        ),
    ]
