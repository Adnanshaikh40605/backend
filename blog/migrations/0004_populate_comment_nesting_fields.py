# Generated by Django 4.2.13 on 2025-06-18 19:51

from django.db import migrations


def populate_comment_fields(apps, schema_editor):
    """
    Populate the level and path fields for existing comments.
    This uses direct SQL queries since the parent field might not be properly recognized by Django ORM.
    """
    # Get the database connection
    db_alias = schema_editor.connection.alias
    
    # Set level=0 for all root comments (parent_id IS NULL)
    schema_editor.execute(
        "UPDATE blog_comment SET level = 0 WHERE parent_id IS NULL"
    )
    
    # Set path for root comments
    schema_editor.execute(
        "UPDATE blog_comment SET path = id::text WHERE parent_id IS NULL"
    )
    
    # Process replies in batches to handle deep nesting
    max_iterations = 10  # Safety limit to prevent infinite loops
    
    for iteration in range(max_iterations):
        # Update level for comments whose parent's level is known
        schema_editor.execute(
            """
            UPDATE blog_comment c1
            SET level = c2.level + 1
            FROM blog_comment c2
            WHERE c1.parent_id = c2.id
            AND c1.level = 0
            AND c2.level IS NOT NULL
            """
        )
        
        # Update path for comments whose parent's path is known
        schema_editor.execute(
            """
            UPDATE blog_comment c1
            SET path = c2.path || '/' || c1.id::text
            FROM blog_comment c2
            WHERE c1.parent_id = c2.id
            AND c1.path = ''
            AND c2.path != ''
            """
        )
        
        # Check if there are still comments to update
        remaining = schema_editor.execute(
            """
            SELECT COUNT(*) FROM blog_comment
            WHERE (level = 0 AND parent_id IS NOT NULL)
            OR (path = '' AND parent_id IS NOT NULL)
            """
        )
        
        # If no more comments to update, we're done
        if remaining == 0:
            break


def reverse_populate(apps, schema_editor):
    """
    Reverse operation - clear the level and path fields
    """
    schema_editor.execute(
        "UPDATE blog_comment SET level = 0, path = ''"
    )


class Migration(migrations.Migration):

    dependencies = [
        ("blog", "0003_add_comment_nesting_fields"),
    ]

    operations = [
        migrations.RunPython(populate_comment_fields, reverse_populate),
    ]
