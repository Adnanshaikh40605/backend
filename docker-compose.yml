version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=blogcms
      - POSTGRES_USER=blogcmsuser
      - POSTGRES_PASSWORD=blogcmspassword
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blogcmsuser -d blogcms"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    volumes:
      - .:/app
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      # Don't mount the env directory to avoid permission issues
      - /app/env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-for-development-only
      - DATABASE_URL=postgres://blogcmsuser:blogcmspassword@db:5432/blogcms
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:5174
    command: >
      bash -c "python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile.dev
    volumes:
      - ./frontend:/app
      # Don't sync node_modules with host for better performance
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data: 